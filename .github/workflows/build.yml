---

name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
  release:
    types: [edited, published]
  schedule:
    - cron: '0 10 * * *'  # everyday at 10am
  workflow_dispatch:
    inputs:
      dispatch-tag:
        description: "Tag to apply to pushed images"
        required: true
        default: dispatch

permissions:
  actions: read
  contents: read

jobs:
  config:
    name: "Config"
    uses: ./.github/workflows/_config.yml

  metadata:
    name: "Metadata"
    needs: [config]
    uses: felddy/reusable-workflows/.github/workflows/docker-metadata.yml@develop
    with:
      image_name: ${{ needs.config.outputs.image_name }}

  foundry-secrets:
    name: "Foundry secrets"
    runs-on: ubuntu-latest
    steps:
      - name: Check foundry.com credentials
        run: |
          return_code=0
          if [ -z "${{ secrets.FOUNDRY_USERNAME }}" ]; then
            echo "::warning::Set the FOUNDRY_USERNAME secret."
            return_code=1
          fi
          if [ -z "${{ secrets.FOUNDRY_PASSWORD }}" ]; then
            echo "::warning::Set the FOUNDRY_PASSWORD secret."
            return_code=1
          fi
          exit $return_code

  docker-secrets:
    name: "Docker secrets"
    runs-on: ubuntu-latest
    steps:
      - name: Check docker.com credentials
        run: |
          return_code=0
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "::warning::Set the DOCKER_USERNAME secret."
            return_code=1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "::warning::Set the DOCKER_PASSWORD secret."
            return_code=1
          fi
          exit $return_code

  artifact-key:
    name: "Artifact key"
    runs-on: ubuntu-latest
    steps:
      - name: Check artifact key
        run: |
          if [ -z "${{ secrets.ARTIFACT_KEY }}" ]; then
            echo "::warning::Set the ARTIFACT_KEY secret."
            exit 1
          fi

  lint:
    name: "Lint"
    needs: [config]
    uses: felddy/reusable-workflows/.github/workflows/common-lint.yml@develop

  build-normal-test-image:
    name: "Build normal test image"
    needs:
      - config
      - lint
      - metadata
    uses: felddy/reusable-workflows/.github/workflows/docker-build-image.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_tarball_artifact_name }}
      cache_from_scopes: ${{ needs.config.outputs.test_platform }}
      cache_to_scope: ${{ needs.config.outputs.test_platform }}
      image_tarball_name: ${{ needs.config.outputs.test_platform }}.tar
      image_labels: ${{ needs.metadata.outputs.image_labels }}
      platforms: ${{ needs.config.outputs.test_platform }}
    secrets:
      build_args: |
        VERSION=${{ needs.metadata.outputs.source_version }}

  build-pre-installed-test-image:
    name: "Build pre-installed test image"
    needs:
      - artifact-key
      - config
      - foundry-secrets
      - lint
      - metadata
    uses: felddy/reusable-workflows/.github/workflows/docker-build-image.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_tarball_artifact_name }}-pre-installed
      cache_from_scopes: ${{ needs.config.outputs.test_platform }}-pre-installed
      cache_to_scope: ${{ needs.config.outputs.test_platform }}-pre-installed
      image_tarball_name: ${{ needs.config.outputs.test_platform }}.tar
      image_labels: ${{ needs.metadata.outputs.image_labels }}
      platforms: ${{ needs.config.outputs.test_platform }}
    secrets:
      artifact_key: ${{ secrets.ARTIFACT_KEY }}
      build_args: |
        FOUNDRY_PASSWORD=${{ secrets.FOUNDRY_PASSWORD }}
        FOUNDRY_USERNAME=${{ secrets.FOUNDRY_USERNAME }}
        VERSION=${{ needs.metadata.outputs.source_version }}

# Since we need to pass the foundryvtt.com credentials to the tests, we can't
# use the standard reusable test workflow.  Instead, we'll use a modified
# version of the workflow that accepts the credential secrets and is stored in
# this repository.

  test-normal-image:
    name: "Test normal image"
    needs:
      - artifact-key
      - build-normal-test-image
      - config
      - foundry-secrets
    uses: ./.github/workflows/docker-pytest-image.yml
    with:
      data_artifact_name: ${{ needs.config.outputs.data_artifact_name }}
      data_artifact_path: ${{ needs.config.outputs.data_artifact_path }}
      image_artifact_name: ${{ needs.config.outputs.image_tarball_artifact_name }}
      image_tarball_name: ${{ needs.config.outputs.test_platform }}.tar
    secrets:
      data_artifact_key: ${{ secrets.ARTIFACT_KEY }}
      foundry_password: ${{ secrets.FOUNDRY_PASSWORD }}
      foundry_username: ${{ secrets.FOUNDRY_USERNAME }}

  test-pre-installed-image:
    name: "Test pre-installed image"
    needs:
      - artifact-key
      - build-pre-installed-test-image
      - config
    uses: ./.github/workflows/docker-pytest-image.yml
    with:
      data_artifact_name: ${{ needs.config.outputs.data_artifact_name }}-pre-installed
      data_artifact_path: ${{ needs.config.outputs.data_artifact_path }}
      image_artifact_name: ${{ needs.config.outputs.image_tarball_artifact_name }}-pre-installed
      image_tarball_name: ${{ needs.config.outputs.test_platform }}.tar
    secrets:
      data_artifact_key: ${{ secrets.ARTIFACT_KEY }}
      image_artifact_key: ${{ secrets.ARTIFACT_KEY }}

  build-each-platform:
    needs:
      - config
      - lint
      - metadata
      - test-normal-image
      - test-pre-installed-image
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        platform: ${{ fromJson(needs.config.outputs.platforms_json) }}
        exclude:
          - platform: ${{ needs.config.outputs.test_platform }}
    name: "${{ matrix.platform }}"
    uses: felddy/reusable-workflows/.github/workflows/docker-build-image.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_tarball_artifact_name }}
      cache_from_scopes: ${{ matrix.platform }}
      cache_to_scope: ${{ matrix.platform }}
      image_labels: ${{ needs.metadata.outputs.image_labels }}
      image_tarball_name: ${{ matrix.platform }}.tar
      platforms: ${{ matrix.platform }}
    secrets:
      build_args: |
        VERSION=${{ needs.metadata.outputs.source_version }}

  build-multi-arch-image:
    needs:
      - build-each-platform
      - config
      - docker-secrets
      - metadata
    if: github.event_name != 'pull_request'
    name: "Publish image"
    permissions:
      packages: write
    uses: felddy/reusable-workflows/.github/workflows/docker-multi-arch-push.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_tarball_artifact_name }}
      image_tags: ${{ needs.metadata.outputs.image_tags }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}

  publish-readme:
    needs:
      - build-multi-arch-image
      - config
      - docker-secrets
      - metadata
    if: needs.metadata.outputs.is_latest == 'true'
    name: "Publish docs"
    uses: felddy/reusable-workflows/.github/workflows/docker-publish-description.yml@develop
    with:
      image_name: ${{ needs.config.outputs.image_name }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
