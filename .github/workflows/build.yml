---

name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
  release:
    types: [edited, published]
  schedule:
    - cron: '0 10 * * *'  # everyday at 10am
  workflow_dispatch:
    inputs:
      dispatch-tag:
        description: "Tag to apply to pushed images"
        required: true
        default: dispatch

permissions:
  actions: read
  contents: read

jobs:
  config:
    name: "Config"
    uses: ./.github/workflows/_config.yml

  metadata:
    name: "Metadata"
    needs: [config]
    uses: felddy/reusable-workflows/.github/workflows/docker-metadata.yml@develop
    with:
      image_name: ${{ needs.config.outputs.image_name }}

  docker-secrets:
    name: "Docker secrets"
    runs-on: ubuntu-latest
    steps:
      - name: Check docker.com credentials
        run: |
          return_code=0
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "::warning::Set the DOCKER_USERNAME secret."
            return_code=1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "::warning::Set the DOCKER_PASSWORD secret."
            return_code=1
          fi
          exit $return_code

  artifact-key:
    name: "Artifact key"
    runs-on: ubuntu-latest
    steps:
      - name: Check artifact key
        run: |
          if [ -z "${{ secrets.ARTIFACT_KEY }}" ]; then
            echo "::warning::Set the ARTIFACT_KEY secret."
            exit 1
          fi

  lint:
    name: "Lint"
    needs: [config]
    uses: felddy/reusable-workflows/.github/workflows/common-lint.yml@develop

  build-test-image:
    name: "Build test image"
    needs:
      - config
      - lint
      - metadata
    uses: felddy/reusable-workflows/.github/workflows/docker-build-image.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}
      cache_from_scopes: ${{ needs.config.outputs.test_platform }}
      cache_to_scope: ${{ needs.config.outputs.test_platform }}
      image_archive_name_stem: ${{ needs.config.outputs.test_platform }}
      image_labels: ${{ needs.metadata.outputs.image_labels }}
      platforms: ${{ needs.config.outputs.test_platform }}
    secrets:
      build_args: |
        VERSION=${{ needs.metadata.outputs.source_version }}

  test-image:
    name: "Test image"
    needs:
      - artifact-key
      - build-test-image
      - config
    uses: felddy/reusable-workflows/.github/workflows/docker-pytest-image.yml@develop
    with:
      data_artifact_name: ${{ needs.config.outputs.data_artifact_name }}
      data_artifact_path: ${{ needs.config.outputs.data_artifact_path }}
      image_archive_name: ${{ needs.build-test-image.outputs.image_archive_name }}
      image_artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}
    secrets:
      data_archive_key: ${{ secrets.ARTIFACT_KEY }}

  build-each-platform:
    needs:
      - config
      - lint
      - metadata
      - test-image
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        platform: ${{ fromJson(needs.config.outputs.platforms_json) }}
        exclude:
          - platform: ${{ needs.config.outputs.test_platform }}
    uses: felddy/reusable-workflows/.github/workflows/docker-build-image.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}
      cache_from_scopes: ${{ matrix.platform }}
      cache_to_scope: ${{ matrix.platform }}
      image_archive_name_stem: ${{ matrix.platform }}
      image_labels: ${{ needs.metadata.outputs.image_labels }}
      platforms: ${{ matrix.platform }}
    secrets:
      build_args: |
        VERSION=${{ needs.metadata.outputs.source_version }}

  generate-sboms:
    needs:
      - build-each-platform
      - config
    permissions:
      contents: write
    uses: felddy/reusable-workflows/.github/workflows/sbom-artifact.yml@feature/sbom
    with:
      image_artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}

  build-multi-arch-image:
    needs:
      - build-each-platform
      - config
      - docker-secrets
      - metadata
    if: github.event_name != 'pull_request'
    name: "Publish image"
    permissions:
      packages: write
    uses: felddy/reusable-workflows/.github/workflows/docker-multi-arch-push.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}
      image_tags: ${{ needs.metadata.outputs.image_tags }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}

  publish-readme:
    needs:
      - build-multi-arch-image
      - config
      - docker-secrets
      - metadata
    if: needs.metadata.outputs.is_latest == 'true'
    name: "Publish docs"
    uses: felddy/reusable-workflows/.github/workflows/docker-publish-description.yml@develop
    with:
      image_name: ${{ needs.config.outputs.image_name }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
